package org.example;// Generated by Selenium IDE

import lombok.extern.slf4j.Slf4j;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.Map;
import java.util.Set;

@Slf4j
public class SerfKrownTest {

  private WebDriver driver;
  private Map<String, Object> vars;
  private JavascriptExecutor js;

  public SerfKrownTest(WebDriver driver, Map<String, Object> vars, JavascriptExecutor js) {
    this.driver = driver;
    this.vars = vars;
    this.js = js;
  }

  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }


  public void serfKrown() {
    log.info("Start serfing with crowns");
    // Test name: serfKrown
    // Step # | name | target | value | comment
    // 1 | times | 20000 |  | 
    Integer times = 0;
    for(; ; ) {
      // 2 | open | /work-serf |  | 
      driver.get("https://aviso.bz/work-serf");
      // 3 | setWindowSize | 1280x720 |  | 
      driver.manage().window().setSize(new Dimension(1280, 720));
      // 4 | click | xpath=//div[3]/table/tbody/tr/td[2]/div/a |  | 
      driver.findElement(By.xpath("//div[3]/table/tbody/tr/td[2]/div/a")).click();
      // 5 | waitForText | linkText=Приступить к просмотру | Приступить к просмотру | 
      {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
        wait.until(ExpectedConditions.textToBe(By.linkText("Приступить к просмотру"), "Приступить к просмотру"));
      }
      // 6 | pause | 5000 |  | 
      try {
        Thread.sleep(5000);
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
      // 7 | click | linkText=Приступить к просмотру |  | 
      vars.put("window_handles", driver.getWindowHandles());
      // 8 | storeWindowHandle | root |  | 
      driver.findElement(By.linkText("Приступить к просмотру")).click();
      // 9 | selectWindow | handle=${win6679} |  | 
      vars.put("win6679", waitForWindow(2000));
      // 10 | pause | 50000 |  | 
      vars.put("root", driver.getWindowHandle());
      // 11 | selectFrame | index=0 |  | 
      driver.switchTo().window(vars.get("win6679").toString());
      // 12 | click | linkText=Подтвердить просмотр |  | 
      try {
        Thread.sleep(50000);
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
      // 13 | pause | 5000 |  | 
      driver.switchTo().frame(0);
      // 14 | close |  |  | 
      driver.findElement(By.linkText("Подтвердить просмотр")).click();
      // 15 | selectWindow | handle=${root} |  | 
      try {
        Thread.sleep(5000);
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
      // 16 | end |  |  | 
      driver.close();
      driver.switchTo().window(vars.get("root").toString());
      times++;
      log.info("Serf Krown counter: " + times);
    }
  }
}
